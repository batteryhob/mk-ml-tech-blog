---
layout: post
title:  머신러닝 서비스를 만들기 위한 MLOps
date:   2021-05-14 00:00:00 +0900
author: 전지호
tags: mlops aws kubenetes
excerpt: 머신러닝 실험 모델을 프로덕션 레벨로 사용하기 위한 필수적인 프로세스입니다. 로컬 컴퓨터, 제플린, 데이터브릭스에서만 사용해보았던 머신러닝 모델을 어떻게 해야 상용 서비스로 만들 수 있을까요? 머신러닝 엔지니어와 분석가가 개발자와의 업무 의존성을 줄이기 위한 머신러닝 인프라에 대해 설명합니다.
---

## 머신러닝 서비스를 만들고 싶은 분들에게

<br/>

> 모델은 만들었는데 이제 어떻게 해야 하지?

<br/>

대부분의 데이터 과학자, 데이터 분석가, 머신러닝엔지니어들은 실험과 학습과 같은 연구에 중점을 둡니다.

예를 들겠습니다.

당신은 사람 얼굴만 보면 정확한 범죄 확률을 예측해 모든 범죄를 막을 수 있는 머신러닝 프로젝트에 참여했습니다.

수 많은 실험과 연구로 성능이 폭발적인 환상적인 모델을 만들었습니다. 모든 CCTV에 모델을 설치하면 마이너리티 리포트는 꿈이 아닙니다.

이제 어떻게 할까요?

전국의 CCTV 프로그래머한테 파이썬 모델 파일을 첨부한 이메일을 발송할까요?

아니면 전국의 CCTV 영상 파일을 매일 매일 받아 로컬 머신 혹은 사내에 설치된 DGX 머신에서 돌려 다시 전달할까요?

<br/>

### 위와 같은 방법들은 많은 문제를 포함합니다.

<br/>

#### 1. 모든 CCTV의 컴퓨팅 사양이 같지 않습니다.

내가 필요로 하는 프레임워크나 라이브러리가 설치가 안될 수 있습니다.

로컬 컴퓨터에서 당연하게 사용하는 파이썬조차 설치가 힘들 수 있습니다.

<br/>

#### 2. 수동 작업은 너무 힘듭니다.

프로덕션 레벨에서 처리되야 할 데이터의 양은 테스트 레벨에서와는 많이 차이날 것 입니다.

한 보고서에 따르면 AI를 다루는 기업은 **88%**가 이 테스트 단계에서 벗어나지 못하고 있습니다.

<br/>

#### 3. 위 문제가 해결되었다 해도 모델의 업데이트 시 마다 같은 작업을 반복해야 합니다.

힘들게 배포한 모델에 오류가 숨어있었습니다.

더 많은 실험을 통해 모델의 성능이 눈에 띄게 좋아졌습니다.

위 작업을 또 해야하나요?

하물며 프로덕션 레벨에서 사용된 데이터들은 재학습을 위한 귀한 재료가 됩니다.

이를 프로덕션 레벨에서 관리하지 않으면 데이터 수급조차 엄청난 리소스가 필요할 것입니다.

<br/>

### 이 발표에서는 아주 낮은 수준의 머신러닝 파이프라인을 다룹니다.

기본적으로 머신러닝 파이프라인은 데이터 수집, 데이터 처리, 기능 엔지니어링, 데이터 레이블링, 모델 설계, 모델 교육 및 최적화, 엔드 포인트 배포, 엔드 포인트 모니터링의 단계를 거칩니다.

이번 발표에서는 프로덕션 배포 자동화 파이프라인을 소개합니다.

다음 발표에서는 데이터 처리와 재 학습이 포함된 파이프라인을 다룰 것입니다.

+ 모델 환경의 자동 빌드
+ 모델의 프로덕션 환경에 배포와 업데이트의 자동화
+ 배포된 모델의 모니터링와 관리

<br/>

### 도커

> 도커를 사용하는 것이 텐서플로를 사용하는 가장 쉬운 방법입니다.

<br/>

텐서플로 공식문서에 다운로드 챕터에 포함되어 있는 제일 첫 문구입니다.

아직도 많은 머신러닝 엔지니어나 데이터 분석가들은 도커의 사용을 어려워합니다.

<br/>

> 도대체 도커를 왜 써야하는데??

<br/>

실험을 했던 로컬 컴퓨터를 24시간 동안 켜놓지않는 이상, 

데이터 브릭스를 무제한 사용할 수 있는 재력과 권한을 갖고 있지 않는 이상,

원격지에 있는 컴퓨팅에 당신의 모델을 배포해야 합니다.

<br/>

혹시 DGX 머신을 가지고 있으신가요?

+ 수 많은 가상 환경과 버전이 충돌하는 프레임워크들로 범벅이 되어 있진 않은가요?

+ GPU를 나눠서 실험 환경과 서비스 환경을 분리할 수 있을까요?

+ 다른 사람이 GPU를 점유하고 있을 때, 언제 끝나나 기다리시고 계신가요?

문제는 프로덕션 환경에 있는 많은 컴퓨터들이 동일한 컴퓨팅 사양을 갖고 있지 않습니다.

더하여, 머신러닝 프레임워크들은 각 라이브러리의 의존성이 강하고 버전에 대한 호환도 약해서

동일한 환경을 세팅하기 어렵습니다.

`도커를 쓰지 않으면 테스트 레벨을 벗어날 수 없습니다.`

<br/>

### 앞으로는 이렇게 말하세요!

> MLOps 구축해주세요!

구측하는 방법은 컨플루언스 문서에 작성했습니다.

<br/>

#### 다시 처음으로 돌아가서, 머신러닝 모델을 상용화하는 방법은 아주 간단합니다. 
### MLOps가 구축되어 있다면요.

<br/>

소스 작성,

<br/>

도커파일 작성,

<br/>

푸쉬!!

<br/>



머신러닝

'''
머신러닝
'''

`머신러닝`

- 머신러닝

> 머신러닝